# 1 HTTP Server
server:
  port: 7970  # HTTP (Tomcat) port
  tomcat:
    uri-encoding: UTF-8
    max-http-header-size: 10000000
# Spring properties
spring:
  application:
    name: tx-manager # Service registers under this name
  profiles:
    active: local
  cloud:
    config:
      name: tx-tm
      profile: ${spring.profiles.active}
      discovery:
        enabled: true
        serviceId: CONFIG-SRV
feign:
  hystrix:
    enabled: true #熔断器启用

hystrix:
  threadpool:
    default:
      coreSize: 200
      maxQueueSize: 200
      queueSizeRejectionThreshold: 50
  command:
    default:
      execution:
        timeout:
          enabled: true  #熔断器启用
        isolation:
          thread:
            timeoutInMilliseconds: 300000 #断路器的超时时间,下级服务返回超出熔断器时间，即便成功，消费端消息也是TIMEOUT,所以一般断路器的超时时间需要大于ribbon的超时时间。服务的返回时间大于ribbon的超时时间，会触发重试,默认=1000，太小
ribbon:
  ReadTimeout: 240000 #请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout
  ConnectTimeout: 60000 #ribbon请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
  MaxAutoRetries: 1 #对当前实例的重试次数
  MaxAutoRetriesNextServer: 1 #切换实例的重试次数
#根据如上配置，当访问到故障请求的时候，它会再尝试访问一次当前实例（次数由MaxAutoRetries配置），
#如果不行，就换一个实例进行访问，如果还是不行，再换一次实例访问（更换次数由MaxAutoRetriesNextServer配置），
#如果依然不行，返回失败信息。

management:
  server:
    enabled: false



---
#本地开发环境
spring:
  profiles: local

eureka:
  client:
    serviceUrl:
#      defaultZone: http://120.26.231.118:11120/eureka/ # 可配置多个地址
      defaultZone: http://127.0.0.1:11120/eureka/ # 可配置多个地址
  healthcheck:
    enabled: true
  instance:
    prefer-ip-address: true   #服务之间调用时，指定IP调用
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    lease-expiration-duration-in-seconds: 10
    lease-renewal-interval-in-seconds: 5

tx-lcn:
  manager:
    host: 127.0.0.1 # TM监听IP. 默认为 127.0.0.1
    port: 8070 # TM监听Socket端口. 默认为 ${server.port} - 100
    heart-time: 15000 # 心跳检测时间(ms). 默认为 300000
    dtx-time: 30000 # 分布式事务执行总时间(ms). 默认为36000
    concurrent-level: 128 # 事务处理并发等级. 默认为机器逻辑核心数5倍
    admin-key: codingapi # TM后台登陆密码，默认值为codingapi
  message:
    netty:
      attr-delay-time: 10000
  logger:
    enabled: true

---
# 集成开发环境配置
spring:
  profiles: dev
eureka:
  client:
    serviceUrl:
      defaultZone: http://121.40.180.70:11120/eureka,http://120.26.231.118:11120/eureka # 可配置多个地址
  healthcheck:
    enabled: true
  instance:
    prefer-ip-address: true   #服务之间调用时，指定IP调用
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    lease-expiration-duration-in-seconds: 10
    lease-renewal-interval-in-seconds: 5

tx-lcn:
  manager:
    host: 10.168.76.24 # TM监听IP. 默认为 127.0.0.1
    port: 22021 # TM监听Socket端口. 默认为 ${server.port} - 100
    heart-time: 15000 # 心跳检测时间(ms). 默认为 300000
    dtx-time: 30000 # 分布式事务执行总时间(ms). 默认为36000
    concurrent-level: 128 # 事务处理并发等级. 默认为机器逻辑核心数5倍
    admin-key: xx_codingapi # TM后台登陆密码，默认值为codingapi
  message:
    netty:
      attr-delay-time: 10000
  logger:
    enabled: true
---
# 测试环境配置
spring:
  profiles: test
  cloud:
    inetutils:
    ignored-interfaces: eth0
http:
  encoding:
  force: true
  enabled: true
  charset: UTF-8
eureka:
  client:
    serviceUrl:
      defaultZone: http://10.117.106.104:11120/eureka/,http://10.51.5.162:11121/eureka/ # 可配置多个地址
  instance:
    prefer-ip-address: true   #服务之间调用时，指定IP调用
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    lease-expiration-duration-in-seconds: 10
    lease-renewal-interval-in-seconds: 5

---
# 测试环境配置
spring:
  profiles: pre
eureka:
  client:
    serviceUrl:
      defaultZone: http://121.40.132.144:11120/ # 可配置多个地址
  instance:
    prefer-ip-address: true   #服务之间调用时，指定IP调用
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    lease-expiration-duration-in-seconds: 10
    lease-renewal-interval-in-seconds: 5
---
# 生产环境配置
spring:
  profiles: product
eureka:
  client:
    serviceUrl:
      defaultZone: http://10.80.227.165:11121/eureka/,http://10.51.30.84:11120/eureka/ # 可配置多个地址
  instance:
    prefer-ip-address: true   #服务之间调用时，指定IP调用
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    lease-expiration-duration-in-seconds: 10
    lease-renewal-interval-in-seconds: 5
